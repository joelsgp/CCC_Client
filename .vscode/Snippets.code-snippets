{
	// Place your code snippets here. Each snippet is defined under a snippet name and has a scope, prefix, body and
	// description. Add comma separated ids of the languages where the snippet is applicable in the scope field. If scope
	// is left empty or omitted, the snippet gets applied to all languages. The prefix is what is
	// used to trigger the snippet and the body will be expanded and inserted. Possible variables are:
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders.
	// Placeholders with the same ids are connected.
	// Example:
	// "Print to console": {
	// 	"scope": "javascript,typescript",
	// 	"prefix": "log",
	// 	"body": [
	// 		"console.log('$1');",
	// 		"$2"
	// 	],
	// 	"description": "Log output to console"
	// }
	"Create Fetch PS Component": {
		"prefix": "psfetchcomponent",
		"body": [
			"import React from 'react';",
			"",
			"export interface $1Props extends DefaultComponentProps {",
			"",
			"}",
			"",
			"interface $1States extends AFetchComponentStates {",
			"",
			"}",
			"",
			"",
			"export class $1Component extends AFetchComponent<$1Props, $1States> {",
			"  constructor(props: $1Props) {",
			"    super(props);",
			"    this.state = {",
			"            dataLoaded: false",
			"    };",
			"    $0",
			"  }",
			"",
			"  protected async handleReload() : Promise<void> {",
			"    this.setState({",
			"      ",
			"    });",
			"  }",
			"",
			"  renderFull() : JSX.Element {",
			"    return <></>;",
			"  }",
			"}"
		],
		"description": "Create Fetch PS Component"
	},
	"Create Props State Component": {
		"prefix": "pscomponent",
		"body": [
			"import React from 'react';",
			"",
			"export interface $1Props extends DefaultComponentProps {",
			"",
			"}",
			"",
			"interface $1States {",
			"",
			"}",
			"",
			"",
			"export class $1Component extends React.Component<$1Props, $1States> {",
			"  constructor(props: $1Props) {",
			"    super(props);",
			"    $0",
			"  }",
			"",
			"  render() : JSX.Element {",
			"    return <></>;",
			"  }",
			"}"
		],
		"description": "Create Props State Component"
	},
	"Create Props Component": {
		"prefix": "pcomponent",
		"body": [
			"import React from 'react';",
			"",
			"export interface $1Props extends DefaultComponentProps {",
			"",
			"}",
			"",
			"export class $1Component extends React.Component<$1Props, {}> {",
			"  constructor(props: $1Props) {",
			"    super(props);",
			"    $0",
			"  }",
			"",
			"  render() : JSX.Element {",
			"    return <></>;",
			"  }",
			"}"
		],
		"description": "Create Props Component"
	},
	"Create Component": {
		"prefix": "component",
		"body": [
			"import React from 'react';",
			"",
			"export class $1Component extends React.Component<DefaultComponentProps, {}> {",
			"  constructor(props: DefaultComponentProps) {",
			"    super(props);",
			"    $0",
			"  }",
			"",
			"  render() : JSX.Element {",
			"    return <></>;",
			"  }",
			"}"
		],
		"description": "Create Component"
	}
}